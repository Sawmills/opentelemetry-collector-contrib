# Use this changelog template to create an entry for release notes.

# One of 'breaking', 'deprecation', 'new_component', 'enhancement', 'bug_fix'
change_type: "enhancement"

# The name of the component, or a single word describing the area of concern, (e.g. filelogreceiver)
component: "ottl"

# A brief description of the change.  Surround your text with quotes ("") if it needs to start with a backtick (`).
note: "Add new OTTL functions for string operations, numeric range checking, context extraction, status remapping, and metric splitting"

# Mandatory: One or more tracking issues related to the change. You can use the PR number here if no issue exists.
issues: [3594]

# (Optional) One or more lines of additional information to render under the primary note.
# These lines will be padded with 2 spaces and then inserted directly into the document.
# Use pipe (|) for multiline entries.
subtext: |
  - Added `Contains`, `StartsWith`, and `EndsWith` functions for string pattern matching
  - Added `IsInRange` function for numeric range validation
  - Added `FromContext` function for extracting data from OpenTelemetry context
  - Added `DdStatusRemapper` function for remapping status values
  - Added `SplitMetricByAttributes` function for splitting metrics by attributes
  - Added public AST type aliases for code generation
  - Added regex compilation utilities with performance optimizations

# If your change doesn't affect end users or the exported elements of any package,
# you should instead start your pull request title with [chore] or use the "Skip Changelog" label.
# Optional: The change log or logs in which this entry should be included.
# e.g. '[user]' or '[user, api]'
# Include 'user' if the change is relevant to end users.
# Include 'api' if there is a change to a library API.
# Default: '[user]'
change_logs: [user, api]
